name: Money Management Authorization Service Docker image build and push

on:
  pull_request:
    types: [ closed ]
    branches: [ "development" ]

env:
  BUILD_NAME: mm-authorization-service-build

jobs:
  build-jar:
    env:
      DB_URL: ${secrets.DB_URL}
      DB_USERNAME: ${secrets.DB_USERNAME}
      DB_PASSWORD: ${secrets.DB_PASSWORD}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Upload JAR build
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_NAME }}
          path: /home/runner/work/money-management-authorization-service/money-management-authorization-service/target/money-management-authorization-service-*.jar
          retention-days: 1

  build-and-push-docker-image:

    needs: build-jar
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3
      - name: Log into Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download JAR for image
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.BUILD_NAME }}
          path: target
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,enable=true,priority=1200,value=development
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Clean artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ env.BUILD_NAME }}