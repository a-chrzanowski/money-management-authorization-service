name: Money Management Authorization Service Docker image build and push

on:
  pull_request:
    types: [ closed ]
    branches: [ "development" ]

jobs:
  build-jar:
    env:
      H2_CONSOLE_ENABLED: ${secrets.H2_CONSOLE_ENABLED}
      H2_WEB_ALLOW_OTHERS: ${secrets.H2_WEB_ALLOW_OTHERS}
      H2_URL: ${secrets.H2_URL}
      H2_USERNAME: ${secrets.H2_USERNAME}
      H2_PASSWORD: ${secrets.H2_PASSWORD}
      REGISTERED_CLIENT_ID: ${secrets.REGISTERED_CLIENT_ID}
      REGISTERED_CLIENT_CLIENT_ID: ${secrets.REGISTERED_CLIENT_CLIENT_ID}
      REGISTERED_CLIENT_CLIENT_SECRET: ${secrets.REGISTERED_CLIENT_CLIENT_SECRET}
      REGISTERED_CLIENT_CLIENT_NAME: ${secrets.REGISTERED_CLIENT_CLIENT_NAME}
      REGISTERED_CLIENT_REDIRECT_URI: ${secrets.REGISTERED_CLIENT_REDIRECT_URI}
      REGISTERED_CLIENT_SCOPES: ${secrets.REGISTERED_CLIENT_SCOPES}
      DEV_USER_USERNAME: ${secrets.DEV_USER_USERNAME}
      DEV_USER_PASSWORDssword: ${secrets.DEV_USER_PASSWORD}
      DEV_USER_AUTHORITY: ${secrets.DEV_USER_AUTHORITY}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Upload JAR build
        uses: actions/upload-artifact@v3
        with:
          name: mm-authorization-service-build
          path: /home/runner/work/money-management-authorization-service/money-management-authorization-service/target/money-management-authorization-service-*.jar

  build-and-push-docker-image:

    needs: build-jar
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3
      - name: Log into Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download JAR for image
        uses: actions/download-artifact@v3
        with:
          name: mm-authorization-service-build
          path: target
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,enable=true,priority=1200,value=development
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}